{
	//This holds our session with the server
	session_id: { type: "int", default: -1 },

	//The last state ID of the game we received. State ID's go upwards.
	//When we request updates we send the last known state ID we received,
	//and the server will update us if something newer is avilaable.
	_state_id: { type: "int", default: -1 },

	//This is the main entry point to the bot. Is called when a message
	//from the server is received. We should respond by adding something
	//to bot.script which controls a response.
	handle_message: "def(map message, object bot) ->commands
		if(message.type = 'game',
		   handle_game_message(message, bot),
		   request_updates(bot)
		)
	",

	handle_game_message: "def(class message.game message, object bot) ->commands
	null
	",

	//A function which sends a request to ask the server for updates when
	//available, will get a response with updates as needed.
	request_updates: "def(object bot) ->commands
	[
		add(bot.script, [{
			session_id: session_id,
			send: {
				type: 'request_updates',
				state_id: _state_id,
			},
		}]),
	]",

	send: "def(object bot, map msg) ->commands
		add(bot.script, [{
			session_id: session_id,
			send: msg,
		}])
	",
}
