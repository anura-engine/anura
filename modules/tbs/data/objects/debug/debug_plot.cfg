{
	id: "debug_plot",
	is_strict: true,
	zorder: 100000,

	mouse_drag_threshold: 100,

	properties: {
		_prev_ctrl: { type: "[bool,bool,bool,bool]", default: [false,false,false,false] },
		drag_pos: { type: "[int,int]", default: [0,0] },

		render: "def() ->commands [
			set(animation, lib.gui.render_frame(c, ww, hh,
			[
				c.set_source_rgba(1, 1, 1, 0.1),
				c.rectangle(0, 0, ww, hh),
				c.fill(),
			])) where c = canvas()
			    where ww = lib.gui.py(64)
			    where hh = lib.gui.py(64)
		]",

		_label: { type: "obj label", dynamic_initialization: true },
	},

	on_create: "render(); set(alpha, 64);
	spawn('label', {
		mid_x: mid_x,
		mid_y: mid_y,
		zorder: zorder,
		_text: [],
		_font_size: lib.gui.py(16),
	}, [
		set(_label, child)
	])",

	on_process: "[
		plot_x(mid_x),
		plot_y(mid_y),
		set(_label.x, mid_x + lib.gui.py(4)),
		set(_label.y, mid_y + lib.gui.py(4)),
		_label.set_text(['(' + str(mid_x) + ',' + str(mid_y) + ')']),

		if(ctrl[0] and not _prev_ctrl[0], add(mid_x, -1)),
		if(ctrl[1] and not _prev_ctrl[1], add(mid_x, 1)),
		if(ctrl[2] and not _prev_ctrl[2], add(mid_y, -1)),
		if(ctrl[3] and not _prev_ctrl[3], add(mid_y, 1)),

		set(_prev_ctrl, ctrl),
	] where ctrl = [level.player.ctrl_left, level.player.ctrl_right, level.player.ctrl_up, level.player.ctrl_down]",

	on_drag_start: "[
		swallow_mouse_event(),
		set(drag_pos, [mouse_x, mouse_y])
	]
	 where mouse_x = lib.gui.mouse_pos(level)[0]
	 where mouse_y = lib.gui.mouse_pos(level)[1]
	",

	on_drag_end: "[
		swallow_mouse_event(),
	]",

	on_drag: "[
		swallow_mouse_event(),
		set(mid_x, mouse_x),
		set(mid_y, mouse_y),
	]
	 where mouse_x = lib.gui.mouse_pos(level)[0]
	 where mouse_y = lib.gui.mouse_pos(level)[1]
	",

	on_being_removed: "remove_object(_label)",
}
