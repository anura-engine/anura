{
	id: "svg_button",
	is_strict: true,
	always_active: true,

	properties: {
		size: { default: 24.0, set: "[invalidate(), set(_data, value)]" },
		scaling: { type: "decimal", get: "size/512.0", set: "[invalidate(), set(size, 512*value)]", variable: false },
		icon: { type: "string", set: "[
			if(_data != value, invalidate()),
			set(_data, value),
		]" },

		mouseover: { type: "bool", default: false },

		mouseover_color: { type: "[int,int,int]", default: [255,255,255] },
		mouseoff_color: { type: "[int,int,int]", default: [196,196,196] },

		invalidate: "def() ->commands set(me._dirty, true)",

		_dirty: false,

		user_info: { type: "any" },

		click_handler: { type: "function() ->commands" },

		_update_canvas: "def() ->commands [
		set(animation, {
			id: 'svg',
			image: 'svg',
			fbo: c.render(int(scaling*512), int(scaling*512),
			[
				//hack hack draw a rectangle with almost complete
				//transparency just so this catches all mouse events in
				//its entire rect.
				c.rectangle(0, 0, int(scaling*512), int(scaling*512)),
				c.set_source_rgba(1, 1, 1, 0.01),
				c.fill(),

				c.set_source_rgba(1, 1, 1, 1),
				c.save(),
				c.scale(scaling,scaling),
				c.draw_svg('images/icons/' + icon, 512, 512),
				c.restore(),
			]
			) where c = canvas(),
			x: 0,
			y: 0,
			w: int(scaling*512),
			h: int(scaling*512),
			scale: 1.0,
			frames: 1,
			duration: -1,
		}),
		set(me._dirty, false)
		]
		",

		set_color: "def([int,int,int] color) -> commands [
			set(me.red, color[0]),
			set(me.green, color[1]),
			set(me.blue, color[2]),
		]",
	},

	on_click: "[swallow_mouse_event(), click_handler()]",

	on_process: "if(_dirty, _update_canvas())",

	on_create: "set_color(mouseoff_color)",

	on_mouse_enter: "[set(mouseover, true), set_color(mouseover_color)]",
	on_mouse_leave: "[set(mouseover, false), set_color(mouseoff_color)]",

}
