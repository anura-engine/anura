{
	id: "particle_path_point",
	is_strict: true,

	mouse_drag_threshold: 10,

	properties: {
		controller: { type: "obj particle_editor" },

		_width: "int :: lib.gui.py(32)",
		_height: "int :: lib.gui.py(32)",

		pos: { type: "int" },

		render: "def() ->commands
		set(animation, {
			id: 'fbo',
			image: 'fbo',
			x: 0, y: 0, w: _width, h: _height,
			scale: 1, frames: 1,
			fbo: c.render(_width, _height, [
				c.rectangle(0, 0, _width, _height),
				c.set_source_color('black'),
				c.fill(),

				c.set_source_color('white'),

				c.set_line_width(1.0),
				c.move_to(_width/2, 0),
				c.line_to(_width/2, _height),
				c.stroke(),

				c.set_line_width(1.0),
				c.move_to(0, _height/2),
				c.line_to(_width, _height/2),
				c.stroke(),

				map(fragments, [
					c.save(),
					value.path,
					c.fill(),
					c.restore(),
				])
			]
			where fragments = c.markup_text(sprintf(q(<font size='12'>%d</font>), pos+1), 100)
			) where c = canvas()

		})
		",
	},

	events: {
		create: "render()",
		drag: "set(mid_xy, lib.gui.mouse_pos(level)); controller.update_path(); swallow_mouse_event()",
	},
}
