{
	id: "gui_example_controller",
	is_strict: true,
	is_human: true,
	always_active: true,
	hidden_in_game: true,

	properties: {
		scrollable: { type: "null|obj scrollable_pane" },
		add_text: "def(string s) ->commands
		if(scrollable != null,

			spawn('text_area', {
				x: 0,
				y: 0,
				text_width: 180,
				_text: s,
			}, [
				remove_object(child);
				add(scrollable.elements, [{ obj: child, ypos: ypos, xpos: 0}]);
				scrollable.force_to_bottom();
				scrollable.recalculate()
			])

			where ypos = sum(map(scrollable.elements, value.obj.img_h))
		)
		",

		slider_label: { type: "null|obj label" },
		change_slider: "def(decimal value) ->commands
			if(slider_label != null,
				slider_label.set_text([sprintf('value: %.2f', value)])
			)
		",

		show_context_menu: "def() ->commands
			spawn('context_menu', {
				x: 200,
				y: 300,
				items: [
				{
					text: 'ITEM A',
					on_select: def() ->commands debug('CLICKED A'),
				},
				{
					text: 'ITEM B',
					on_select: def() ->commands debug('CLICKED B'),
				},
				{
					text: 'ITEM C',
					on_select: def() ->commands debug('CLICKED C'),
				},
				],
			}, [
				child.pause_background_objects,
			])
		",
	},

	events: {
		create: "
		debug('SPAWN BUTTON');

		spawn('button_controller', {
			x: 200,
			y: 200,
			tooltip: 'Test tooltip',
			text: 'Sample text',
			on_click: def() ->commands debug('BUTTON CLICKED'),
		});
	
		spawn('button_controller', {
			x: 200,
			y: 300,
			tooltip: 'Test tooltip',
			text: 'Context menu',
			on_click: me.show_context_menu,
		});
		
		spawn('button_controller', {
			x: 200,
			y: 400,
			tooltip: 'Test tooltip',
			text: 'Checkbox',
			checked: true,
			on_click: def() ->commands debug('CHECK CLICKED'),
		});
		
		spawn('text_area', {
			x: 200,
			y: 500,
			text_width: 400,
			_text: q(This is some <i>Sample Text</i>. Some text <b>in bold</b>. Some <font size='+20%'>larger text</font>. Here is <font tag='http://www.frogatto.com'>a link</font>. Here is an icon: <img src='images/icons/horned-helm.svg'/>),
			bg_color: [0.0,0.0,0.0,1.0],
		});

		spawn('label', {
			x2: 400,
			y: 560,
			_text: ['value: 1.00'],
		}, [
			set(slider_label, child),
		]);
		
		spawn('slider_widget', {
			x: 200,
			y: 600,
			slider_width: 200,
			slider_height: 20,
			value_change_handler: me.change_slider,
		});
		
		spawn('combo_controller', {
			x: 200,
			y: 700,
			_font_size: 14,
			_height: 20,
			_width: 70,
			selected_index: 3,
			items: ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5'],
			on_change: def(int n) ->commands debug('SELECTED ' + str(n)),
		});
		
		spawn('button_controller', {
			x: 400,
			y: 700,
			text: 'Dialog',
			on_click: def() ->commands
				spawn('dialog', {
					pane_width: 500,
					pane_height: 300,
					title: 'Title',
				}, [
					spawn('button_controller', {
						x: 40,
						y: 40,
						text: 'TEST',
						on_click: def() ->commands debug('DIALOG BUTTON CLICKED'),
						zorder: 20000,
					}, [
						dialog.add_widget(child)
					]),
				] where dialog = child),
		});

		spawn('scrollable_pane', {
			x: 600,
			y: 20,
			area_width: 200,
			area_height: 140,
			elements: [
			],
			clamp_to_bottom: true,
		}, [
			set(scrollable, child),
		]);
		
		spawn('text_entry', {
			x: 600,
			y: 200,
			_width: 140,
			default_text: 'Type something',
			_on_enter_arg: def(obj text_entry e) ->commands if(e.text, me.add_text(e.text); set(e.text, '')),
		});
		spawn('text_entry', {
			x: 600,
			y: 240,
			_width: 140,
			default_text: 'Password',
			_password: true,
		});

		spawn('scrollbar_vertical', {
			x: 600,
			y: 400,
			scrollbar_width: 12,
			scrollbar_height: 200,

			max_pos: 1000.0,
			handle_height: 100.0,
			handle_pos: 500.0,
			step_size: 50.0,
		});
	
		spawn('scrollable_pane', {
			x: 900,
			y: 100,
			area_width: 300,
			area_height: 300,
			elements: fold(map(range(50),
			[
			{
			obj: object('text_area', {
				x: 0,
				y: 0,
				text_width: 200,
				_text: sprintf('Sample text %d blah blah', value),
			}),
			ypos: value*20,
			},
			{
			obj: object('button_controller', {
				x: 0,
				y: 0,
				text: 'Click ' + str(value),
				on_click: def() ->commands debug('BUTTON CLICKED ' + str(value)),
				_font_size: 10,
				button_width: 40,
				button_height: 16
			}),
			ypos: value*20,
			xpos: 220,
			}
			]
			), a+b, []),
			clamp_to_bottom: true,
		}, [
			set(scrollable, child),
		]);

		spawn('image_widget', {
			x: 900,
			y: 500,
			draw_width: 192,
			draw_height: 128,
			image: 'scrollbar_elements.png',
			image_area: [0.0,0.0,192.0,128.0],
		});

		spawn('svg_button', {
			x: 1200,
			y: 500,
			size: 48.0,
			icon: 'horned-helm.svg',
			click_handler: def() ->commands null,
		})
		
		
		",
	},
}
