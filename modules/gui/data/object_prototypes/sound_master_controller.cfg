{
	id: "sound_master_controller",

	properties: {
		logsounds: "
		if(lib.sound.log_sounds, [
			remove_object(cur_log),
			set(lib.sound.log_sounds, false),

		] where cur_log = find(level.chars, value is obj sound_log), [
			set(lib.sound.log_sounds, true),
			spawn('sound_log', {
				x: 0, y: 0,
			})
		])
		",

		prepare_sound: "def(custom_obj obj, string sound, decimal volume, decimal delay) ->playing_sound
			audio.sound(sound, { pos: -delay })
		",

		play_sound: "def(custom_obj obj, string sound, decimal volume, decimal delay) ->commands
			execute(me,
				prepare_sound(obj, sound, volume, delay).play()
			)
		",

		log_sound: "def(custom_obj obj, string sound_name, string|null fname) ->commands
		if(logger = null,
		   (spawn('sound_log', {
			x: 0, y: 0,
		   }
		   ); log_sound(obj,sound_name,fname)),

			logger.add_entry(obj, sound_name, fname)
		)
			where logger = find(level.chars, value is obj sound_log)
		",
	},
}
