Useful Utilities for Anura:

Due to the transient nature of utilities, their intrinsic one-off nature, we lack a body of examples of code. This file aims to remedy that by collecting written utilities – even if they're not useful again in themselves, they might be useful to modify later. To use these modules, collapse the code into one line, copy, and undo. (ctrl-j, -c, and -z here)

  
Search for a string ("time()") in a module ("frogatto"):
grep -Hnr 'time()' modules/frogatto/

And replace:
cd modules; find . -type f -print0 | xargs -0 sed -i 's/time()/time().unix/g'

Assertions:
[…] asserting x != 0 | 'x is zero'

Audit for all standable objects with regards to "material sound":
./game --utility=query modules/frogatto/data/objects "
    if(is_map(doc)/* and (not is_map(doc.properties) and doc.properties.team)*/ and (doc.platform_area or is_map(doc.properties) and doc.properties['material sound']),
        if((not is_map(doc.properties)) or is_map(doc.properties) and doc.properties['material sound'] = null, 
            '\${doc.id}, null',
            '\${doc.id}, ' + doc.properties['material sound']
        ) )
" | python3 -c "
try:
  data = {}
  print('Tabulating material sound tags. One moment please…')
  line = input()
  while True:
    line = line.strip('\"')
    split = list(map(lambda e: e.strip().strip('\''), line.split(',')))
    data[split[0]] = split[1]
    line = input()
except EOFError:
  pass
counts = {}
for entry in data:
  if data[entry] in counts:
    counts[data[entry]] += 1
  else:
    counts[data[entry]] = 1
print('=== REPORT ===')
nullCount = 0
if 'null' in counts:
  nullCount = counts['null']
print('Objects Tagged: '
  + str(100-(nullCount/sum(counts.values()))*100).split('.')[0]
  + '% ('
  + str((sum(counts.values())-nullCount))
  + ' of '
  + str(sum(counts.values()))
  + ' set)')
tagsUsed = list(counts.keys())
tagsUsed.sort()
def removeUnlikelyTags(tag):
  if tag == 'null': return False
  if '.' in tag or '(' in tag or '[' in tag: return False #We have to filter for FFL here. Unfortunantly, tags or FFL, it's all strings to the query command so we have to make this little guess.
  return True
tagsUsed = list(filter(removeUnlikelyTags, tagsUsed))
print(str(len(tagsUsed))
  + ' Tags Used: '
  + str(tagsUsed))
if nullCount:
 print('Objects To Be Set: ')
 for type in data:
   if data[type] == 'null':
     print('  ' + type + '.cfg')
else:
  print('No objects need setting.')
print('(search in ~/modules/frogatto/data/objects/)\n=== END REPORT ===')
"


Citadel (normal, MP)
./game --module=Citadel --tbs-server
X ./game --module=Citadel --server=theargentlark.com:23056
./game --module=Citadel --user=DDR --server=theargentlark.com:18081 --tbs-server
git pull                :: pulls from default, ddr0, here.
git pull parent master  :: pulls from dave's fork



Get a list of all enemy descriptions:
./anura --utility=query modules/frogatto/data/objects 'if(doc.properties and doc.properties.description, ("\n${doc.id}.cfg:\n     description: ${doc.properties.description}\n    taste: ${doc.properties.taste}\n\n"))' 2>&1 | grep -v "\""